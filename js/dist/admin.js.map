{"version":3,"sources":["webpack://@fof/gamification/webpack/bootstrap","webpack://@fof/gamification/external \"flarum.core.compat['common/Model']\"","webpack://@fof/gamification/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/gamification/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/gamification/external \"flarum.core.compat['common/components/Button']\"","webpack://@fof/gamification/./src/common/helpers/rankLabel.js","webpack://@fof/gamification/external \"flarum.core.compat['common/utils/Stream']\"","webpack://@fof/gamification/external \"flarum.core.compat['common/utils/withAttr']\"","webpack://@fof/gamification/./src/common/models/Rank.js","webpack://@fof/gamification/external \"flarum.core.compat['common/components/Switch']\"","webpack://@fof/gamification/./src/common/models/index.js","webpack://@fof/gamification/./src/common/helpers/index.js","webpack://@fof/gamification/external \"flarum.core.compat['common/utils/mixin']\"","webpack://@fof/gamification/external \"flarum.core.compat['common/models/Group']\"","webpack://@fof/gamification/external \"flarum.core.compat['common/components/Select']\"","webpack://@fof/gamification/external \"flarum.core.compat['admin/app']\"","webpack://@fof/gamification/external \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@fof/gamification/external \"flarum.core.compat['admin/utils/saveSettings']\"","webpack://@fof/gamification/external \"flarum.core.compat['admin/components/UploadImageButton']\"","webpack://@fof/gamification/external \"flarum.core.compat['common/components/GroupBadge']\"","webpack://@fof/gamification/./src/admin/components/UploadImageButton.js","webpack://@fof/gamification/./src/admin/components/SettingsPage.js","webpack://@fof/gamification/./src/admin/components/index.js","webpack://@fof/gamification/./src/admin/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","rankLabel","rank","attrs","style","className","color","backgroundColor","Rank","mixin","Model","points","attribute","groups","models","helpers","UploadImageButton","resourceUrl","app","forum","this","path","FlarumUploadImageButton","SettingsPage","oninit","vnode","fields","switches","ranks","store","all","values","settingsPrefix","settings","data","forEach","Stream","addPrefix","Number","newRank","sticky_group","content","null","group","parseInt","id","nameSingular","onsubmit","translator","trans","undefined","convertedLikes","Button","component","type","onclick","request","url","method","then","number","map","placeholder","oninput","withAttr","updatePoints","updateName","updateColor","Select","options","Array","isArray","onchange","updateGroups","icon","deleteRank","onChange","addRank","GroupBadge","sticky_rank","updateStickyRank","Switch","state","onlyOneStickyRank","rankAmt","iconName","allowSelfVote","autoUpvotePosts","rateLimit","showVotesOnDiscussionPage","useAlternateLayout","pointsPlaceholder","customRankingImages","blockedUsers","num","loading","disabled","changed","save","emptyValue","relationships","getById","rankToDelete","some","splice","createRecord","push","redraw","switchesCheck","e","preventDefault","alerts","dismiss","successAlert","saveSettings","show","window","location","reload","ExtensionPage","components","initializers","add","Group","hasOne","extensionData","registerPermission","label","permission","registerPage"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 48);\n","module.exports = flarum.core.compat['common/Model'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","module.exports = flarum.core.compat['common/components/Button'];","export default function rankLabel(rank, attrs = {}) {\r\n    attrs.style = attrs.style || {};\r\n    attrs.className = 'rankLabel ' + (attrs.className || '');\r\n\r\n    const color = rank.color();\r\n    attrs.style.backgroundColor = attrs.style.color = color;\r\n    attrs.className += ' colored';\r\n\r\n    return m('span', attrs, <span className=\"rankLabel-text\">{rank.name()}</span>);\r\n}\r\n","module.exports = flarum.core.compat['common/utils/Stream'];","module.exports = flarum.core.compat['common/utils/withAttr'];","import Model from 'flarum/common/Model';\nimport mixin from 'flarum/common/utils/mixin';\n\nexport default class Rank extends mixin(Model, {\n    points: Model.attribute('points'),\n    name: Model.attribute('name'),\n    color: Model.attribute('color'),\n    groups: Model.attribute('groups')\n}) {}\n","module.exports = flarum.core.compat['common/components/Switch'];","import Rank from './Rank';\r\n\r\nexport const models = {\r\n    Rank,\r\n};\r\n","import rankLabel from './rankLabel';\r\n\r\nexport const helpers = {\r\n    rankLabel,\r\n};\r\n","module.exports = flarum.core.compat['common/utils/mixin'];","module.exports = flarum.core.compat['common/models/Group'];","module.exports = flarum.core.compat['common/components/Select'];","module.exports = flarum.core.compat['admin/app'];","module.exports = flarum.core.compat['admin/components/ExtensionPage'];","module.exports = flarum.core.compat['admin/utils/saveSettings'];","module.exports = flarum.core.compat['admin/components/UploadImageButton'];","module.exports = flarum.core.compat['common/components/GroupBadge'];","import FlarumUploadImageButton from 'flarum/admin/components/UploadImageButton';\r\n\r\nexport default class UploadImageButton extends FlarumUploadImageButton {\r\n    resourceUrl() {\r\n        return app.forum.attribute('apiUrl') + '/' + this.attrs.path;\r\n    }\r\n}\r\n","import ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport Button from 'flarum/common/components/Button';\nimport saveSettings from 'flarum/admin/utils/saveSettings';\nimport Switch from 'flarum/common/components/Switch';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport Stream from 'flarum/common/utils/Stream';\nimport UploadImageButton from './UploadImageButton';\nimport Select from \"flarum/common/components/Select\";\nimport GroupBadge from \"flarum/common/components/GroupBadge\";\n\nexport default class SettingsPage extends ExtensionPage {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.fields = [\n            'convertedLikes',\n            'amountPerPost',\n            'amountPerDiscussion',\n            'postStartAmount',\n            'rankAmt',\n            'iconName',\n            'blockedUsers',\n            'pointsPlaceholder',\n        ];\n\n        this.switches = [\n            'autoUpvotePosts',\n            'customRankingImages',\n            'rateLimit',\n            'showVotesOnDiscussionPage',\n            'useAlternateLayout',\n            'allowSelfVote',\n            'onlyOneStickyRank'\n        ];\n\n        this.ranks = app.store.all('ranks');\n\n        this.values = {};\n\n        this.settingsPrefix = 'fof-gamification';\n\n        const settings = app.data.settings;\n\n        this.fields.forEach((key) => (this.values[key] = Stream(settings[this.addPrefix(key)])));\n\n        this.switches.forEach((key) => (this.values[key] = Stream(!!Number(settings[this.addPrefix(key)]))));\n\n        this.newRank = {\n            points: Stream(''),\n            name: Stream(''),\n            color: Stream(''),\n            groups: Stream(''),\n            sticky_group: Stream('')\n        };\n    }\n\n    /**\n     * @returns {*}\n     */\n    content() {\n        const groups = {\n            null: null\n        };\n        app.store.all('groups').forEach(group => groups[parseInt(group.id())] = group.nameSingular());\n        const ranks = {\n            null: null\n        };\n        this.ranks.forEach(rank => ranks[parseInt(rank.id())] = rank.name());\n\n        return [\n            m('div', { className: 'SettingsPage' }, [\n                m('div', { className: 'container' }, [\n                    m('form', { onsubmit: this.onsubmit.bind(this) }, [\n                        m('div', { className: 'helpText' }, app.translator.trans('fof-gamification.admin.page.convert.help')),\n                        this.values.convertedLikes() === undefined\n                            ? Button.component(\n                                  {\n                                      type: 'button',\n                                      className: 'Button Button--warning Ranks-button',\n                                      onclick: () => {\n                                          app.request({\n                                              url: app.forum.attribute('apiUrl') + '/fof/gamification/convert',\n                                              method: 'POST',\n                                          }).then(this.values.convertedLikes('converting'));\n                                      },\n                                  },\n                                  app.translator.trans('fof-gamification.admin.page.convert.button')\n                              )\n                            : this.values.convertedLikes() === 'converting'\n                            ? m('label', {}, app.translator.trans('fof-gamification.admin.page.convert.converting'))\n                            : m(\n                                  'label',\n                                  {},\n                                  app.translator.trans('fof-gamification.admin.page.convert.converted', { number: this.values.convertedLikes() })\n                              ),\n                        m('fieldset', { className: 'SettingsPage-ranks' }, [\n                            m('legend', {}, app.translator.trans('fof-gamification.admin.page.ranks.title')),\n                            m('label', {}, app.translator.trans('fof-gamification.admin.page.ranks.ranks')),\n                            m('div', { className: 'helpText' }, app.translator.trans('fof-gamification.admin.page.ranks.help.help')),\n                            m(\n                                'div',\n                                { className: 'Ranks--Container' },\n                                this.ranks.map((rank) => {\n                                    return m('div', { style: 'float: left;' }, [\n                                        m('input', {\n                                            className: 'FormControl Ranks-number',\n                                            type: 'number',\n                                            value: rank.points(),\n                                            placeholder: app.translator.trans('fof-gamification.admin.page.ranks.help.points'),\n                                            oninput: withAttr('value', this.updatePoints.bind(this, rank)),\n                                        }),\n                                        m('input', {\n                                            className: 'FormControl Ranks-name',\n                                            value: rank.name(),\n                                            placeholder: app.translator.trans('fof-gamification.admin.page.ranks.help.name'),\n                                            oninput: withAttr('value', this.updateName.bind(this, rank)),\n                                        }),\n                                        m('input', {\n                                            className: 'FormControl Ranks-color',\n                                            value: rank.color(),\n                                            placeholder: app.translator.trans('fof-gamification.admin.page.ranks.help.color'),\n                                            oninput: withAttr('value', this.updateColor.bind(this, rank)),\n                                        }),\n                                        Select.component({\n                                            className: 'FormControl Ranks-group',\n                                            options: groups,\n                                            value: Array.isArray(rank.groups()) ? rank.groups()[0] : rank.groups(),\n                                            placeholder: app.translator.trans('fof-gamification.admin.page.ranks.help.group'),\n                                            onchange: this.updateGroups.bind(this, rank),\n                                        }),\n                                        Button.component({\n                                            type: 'button',\n                                            className: 'Button Button--warning Ranks-button',\n                                            icon: 'fa fa-times',\n                                            onclick: this.deleteRank.bind(this, rank),\n                                        }),\n                                    ]);\n                                }),\n                                m('div', { style: 'float: left; margin-bottom: 15px' }, [\n                                    m('input', {\n                                        className: 'FormControl Ranks-number',\n                                        value: this.newRank.points(),\n                                        placeholder: app.translator.trans('fof-gamification.admin.page.ranks.help.points'),\n                                        type: 'number',\n                                        oninput: withAttr('value', this.newRank.points),\n                                    }),\n                                    m('input', {\n                                        className: 'FormControl Ranks-name',\n                                        value: this.newRank.name(),\n                                        placeholder: app.translator.trans('fof-gamification.admin.page.ranks.help.name'),\n                                        oninput: withAttr('value', this.newRank.name),\n                                    }),\n                                    m('input', {\n                                        className: 'FormControl Ranks-color',\n                                        value: this.newRank.color(),\n                                        placeholder: app.translator.trans('fof-gamification.admin.page.ranks.help.color'),\n                                        oninput: withAttr('value', this.newRank.color),\n                                    }),\n                                    Select.component({\n                                        className: 'FormControl Ranks-group',\n                                        options: groups,\n                                        value: this.newRank.groups(),\n                                        placeholder: app.translator.trans('fof-gamification.admin.page.ranks.help.group'),\n                                        onChange: this.newRank.groups,\n                                    }),\n                                    Button.component({\n                                        type: 'button',\n                                        className: 'Button Button--warning Ranks-button',\n                                        icon: 'fa fa-plus',\n                                        onclick: this.addRank.bind(this),\n                                    }),\n                                ])\n                            ),\n                            m('legend', {}, app.translator.trans('fof-gamification.admin.page.sticky-ranks.title')),\n                            m('label', {}, app.translator.trans('fof-gamification.admin.page.sticky-ranks.label')),\n                            m('div', { className: 'helpText' }, app.translator.trans('fof-gamification.admin.page.sticky-ranks.help')),\n                            m(\n                                'table',\n                                { className: 'Ranks--Container' },\n                                app.store.all('groups').map((group) => {\n                                    return [\n                                        m('tr', [\n                                            m('td', GroupBadge.component({ group: group })),\n                                            m('td', m('b', {\n                                                    className: 'Ranks-group',\n                                                    style: 'margin-right: 8px; margin-left: 5px;'\n                                                }, `${group.nameSingular()}`)\n                                            ),\n                                            m('td', Select.component({\n                                                className: 'FormControl Ranks-name',\n                                                options: ranks,\n                                                value: group.sticky_rank() ? group.sticky_rank().id() : '',\n                                                placeholder: app.translator.trans('fof-gamification.admin.page.ranks.help.name'),\n                                                onchange: this.updateStickyRank.bind(this, group),\n                                            })),\n                                        ]),\n                                        m('tr', {style: 'height: 8px;'})\n                                    ];\n                                })\n                            ),\n                            Switch.component({\n                                    state: this.values.onlyOneStickyRank(),\n                                    onchange: this.values.onlyOneStickyRank,\n                                    className: 'votes-switch',\n                                },\n                                app.translator.trans('fof-gamification.admin.page.sticky-ranks.only_one_sticky_rank')\n                            ),\n                            m('label', {}, app.translator.trans('fof-gamification.admin.page.ranks.number_title')),\n                            m('input', {\n                                className: 'FormControl Ranks-default',\n                                value: this.values.rankAmt() || '',\n                                placeholder: 2,\n                                oninput: withAttr('value', this.values.rankAmt),\n                            }),\n\n                            m('legend', {}, app.translator.trans('fof-gamification.admin.page.votes.title')),\n                            m('label', {}, app.translator.trans('fof-gamification.admin.page.votes.icon_name')),\n                            m('div', { className: 'helpText' }, app.translator.trans('fof-gamification.admin.page.votes.icon_help')),\n                            m('input', {\n                                className: 'FormControl Ranks-default',\n                                value: this.values.iconName() || '',\n                                placeholder: 'thumbs',\n                                oninput: withAttr('value', this.values.iconName),\n                            }),\n                            Switch.component(\n                                {\n                                    state: this.values.allowSelfVote(),\n                                    onchange: this.values.allowSelfVote,\n                                    className: 'votes-switch',\n                                },\n                                app.translator.trans('fof-gamification.admin.page.votes.allow_selfvote')\n                            ),\n                            Switch.component(\n                                {\n                                    state: this.values.autoUpvotePosts() || false,\n                                    onchange: this.values.autoUpvotePosts,\n                                    className: 'votes-switch'\n                                },\n                                app.translator.trans('fof-gamification.admin.page.votes.auto_upvote')\n                            ),\n                            Switch.component(\n                                {\n                                    state: this.values.rateLimit() || false,\n                                    onchange: this.values.rateLimit,\n                                    className: 'votes-switch',\n                                },\n                                app.translator.trans('fof-gamification.admin.page.votes.rate_limit')\n                            ),\n                            Switch.component(\n                                {\n                                    state: this.values.showVotesOnDiscussionPage() || false,\n                                    onchange: this.values.showVotesOnDiscussionPage,\n                                    className: 'votes-switch',\n                                },\n                                app.translator.trans('fof-gamification.admin.page.votes.discussion_page')\n                            ),\n                            Switch.component(\n                                {\n                                    state: this.values.useAlternateLayout() || false,\n                                    onchange: this.values.useAlternateLayout,\n                                    className: 'votes-switch',\n                                },\n                                app.translator.trans('fof-gamification.admin.page.votes.alternate_layout')\n                            ),\n                            m('label', {}, app.translator.trans('fof-gamification.admin.page.votes.points_title')),\n                            m('input', {\n                                className: 'FormControl Ranks-default',\n                                value: this.values.pointsPlaceholder() || '',\n                                placeholder: app.translator.trans('fof-gamification.admin.page.votes.points_placeholder') + '{points}',\n                                oninput: withAttr('value', this.values.pointsPlaceholder),\n                            }),\n\n                            m('legend', {}, app.translator.trans('fof-gamification.admin.page.rankings.title')),\n                            Switch.component(\n                                {\n                                    state: this.values.customRankingImages() || false,\n                                    onchange: this.values.customRankingImages,\n                                    className: 'votes-switch',\n                                },\n                                app.translator.trans('fof-gamification.admin.page.rankings.enable')\n                            ),\n                            m('label', {}, app.translator.trans('fof-gamification.admin.page.rankings.blocked.title')),\n                            m('input', {\n                                className: 'FormControl Ranks-blocked',\n                                placeholder: app.translator.trans('fof-gamification.admin.page.rankings.blocked.placeholder'),\n                                value: this.values.blockedUsers() || '',\n                                oninput: withAttr('value', this.values.blockedUsers),\n                            }),\n                            m('div', { className: 'helpText' }, app.translator.trans('fof-gamification.admin.page.rankings.blocked.help')),\n                            ...[1, 2, 3].map((num) => [\n                                <label className=\"Upload-label\">\n                                    {app.translator.trans(`fof-gamification.admin.page.rankings.custom_image_${num}`)}\n                                </label>,\n                                <UploadImageButton\n                                    className=\"Upload-button\"\n                                    name={`fof-gamification.topimage${num}`}\n                                    path={`fof/gamification/topimage${num}`}\n                                />,\n                                <br />,\n                            ]),\n                            Button.component(\n                                {\n                                    type: 'submit',\n                                    className: 'Button Button--primary Ranks-save',\n                                    loading: this.loading,\n                                    disabled: !this.changed(),\n                                },\n                                app.translator.trans('fof-gamification.admin.page.save_settings')\n                            ),\n                        ]),\n                    ]),\n                ]),\n            ]),\n        ];\n    }\n\n    updateName(rank, value) {\n        rank.save({ name: value });\n    }\n\n    updatePoints(rank, value) {\n        rank.save({ points: value });\n    }\n\n    updateColor(rank, value) {\n        rank.save({ color: value });\n    }\n\n    updateGroups(rank, value) {\n        rank.save({ groups: value });\n    }\n\n    updateStickyRank(group, value) {\n        const emptyValue = {\n            data: []\n        }\n        group.save({ relationships: { sticky_rank: value ? (app.store.getById('ranks', value) ?? emptyValue) : emptyValue } })\n    }\n\n    deleteRank(rankToDelete) {\n        rankToDelete.delete();\n        this.ranks.some((rank, i) => {\n            if (rank.data.id === rankToDelete.data.id) {\n                this.ranks.splice(i, 1);\n                return true;\n            }\n        });\n    }\n\n    addRank(rank) {\n        app.store\n            .createRecord('ranks')\n            .save({\n                points: this.newRank.points(),\n                name: this.newRank.name(),\n                color: this.newRank.color(),\n                groups: this.newRank.groups()\n            })\n            .then((rank) => {\n                this.newRank.color('');\n                this.newRank.name('');\n                this.newRank.points('');\n                this.newRank.groups('');\n                this.ranks.push(rank);\n                m.redraw();\n            });\n    }\n\n    /**\n     *\n     * @returns boolean\n     */\n    changed() {\n        var switchesCheck = this.switches.some((key) => this.values[key]() !== (app.data.settings[this.addPrefix(key)] == '1'));\n        var fieldsCheck = this.fields.some((key) => this.values[key]() !== app.data.settings[this.addPrefix(key)]);\n        return fieldsCheck || switchesCheck;\n    }\n\n    /**\n     * @param e\n     */\n    onsubmit(e) {\n        e.preventDefault();\n\n        if (this.loading) return;\n\n        this.loading = true;\n\n        app.alerts.dismiss(this.successAlert);\n\n        const settings = {};\n\n        this.switches.forEach((key) => (settings[this.addPrefix(key)] = this.values[key]()));\n        this.fields.forEach((key) => (settings[this.addPrefix(key)] = this.values[key]()));\n\n        saveSettings(settings)\n            .then(() => {\n                app.alerts.show({ type: 'success' }, app.translator.trans('core.admin.basics.saved_message'));\n            })\n            .catch(() => {})\n            .then(() => {\n                this.loading = false;\n                window.location.reload();\n            });\n    }\n\n    /**\n     * @returns string\n     */\n    addPrefix(key) {\n        return this.settingsPrefix + '.' + key;\n    }\n}\n","import SettingsPage from './SettingsPage';\r\n\r\nexport const components = {\r\n    SettingsPage,\r\n};\r\n","import app from 'flarum/admin/app';\nimport SettingsPage from './components/SettingsPage';\n\nimport Model from \"flarum/common/Model\";\nimport Rank from '../common/models/Rank';\nimport Group from \"flarum/common/models/Group\";\n\napp.initializers.add('fof-gamification', (app) => {\n    app.store.models.ranks = Rank;\n    Group.prototype.sticky_rank = Model.hasOne('sticky_rank')\n\n    app.extensionData\n        .for('fof-gamification')\n        .registerPermission(\n            {\n                icon: 'fas fa-thumbs-up',\n                label: app.translator.trans('fof-gamification.admin.permissions.vote_label'),\n                permission: 'discussion.votePosts',\n            },\n            'reply'\n        )\n        .registerPermission(\n            {\n                icon: 'fas fa-info-circle',\n                label: app.translator.trans('fof-gamification.admin.permissions.see_votes_label'),\n                permission: 'discussion.canSeeVotes',\n            },\n            'view'\n        )\n        .registerPermission(\n            {\n                icon: 'fas fa-trophy',\n                label: app.translator.trans('fof-gamification.admin.permissions.see_ranking_page'),\n                permission: 'fof.gamification.viewRankingPage',\n            },\n            'view'\n        )\n        .registerPage(SettingsPage);\n});\n\nexport * from '../common/helpers';\nexport * from './components';\n"],"sourceRoot":""}